// <auto-generated />
using System;
using Financeiro.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Financeiro.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Financeiro.Data.Configurations.Categorias.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_serial_categoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSistema")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("IdSistema");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("Financeiro.Data.Configurations.Despesas.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_serial_despesa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataalteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("datacadastro");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("datapagamento");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("datavencimento");

                    b.Property<bool>("DespesaAtrasada")
                        .HasColumnType("bit")
                        .HasColumnName("despesaatrasada");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int")
                        .HasColumnName("mes");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit")
                        .HasColumnName("pago");

                    b.Property<int>("TipoDespesa")
                        .HasColumnType("int")
                        .HasColumnName("tipodespesa");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("despesa");
                });

            modelBuilder.Entity("Financeiro.Data.Configurations.SistemasFinanceiros.SistemaFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_serial_sistemafinanceiro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<int>("AnoCopia")
                        .HasColumnType("int")
                        .HasColumnName("anocopia");

                    b.Property<int>("DiaDeFechamento")
                        .HasColumnType("int")
                        .HasColumnName("diadefechamento");

                    b.Property<bool>("GerarCopiaDespesa")
                        .HasColumnType("bit")
                        .HasColumnName("gerarcopiadespesa");

                    b.Property<int>("Mes")
                        .HasColumnType("int")
                        .HasColumnName("mes");

                    b.Property<int>("MesCopia")
                        .HasColumnType("int")
                        .HasColumnName("mescopia");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("sistemafinanceiro");
                });

            modelBuilder.Entity("Financeiro.Data.Configurations.UsuariosSistemasFinanceiro.UsuarioSistemaFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_serial_userfinacesystem");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit")
                        .HasColumnName("admin");

                    b.Property<string>("EmailUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("emailuser");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<bool>("SistemaAtual")
                        .HasColumnType("bit")
                        .HasColumnName("sistemaatual");

                    b.Property<int>("SistemaId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("SistemaId");

                    b.ToTable("usuariosistemafinanceiro");
                });

            modelBuilder.Entity("Financeiro.Data.Configurations.Categorias.Categoria", b =>
                {
                    b.HasOne("Financeiro.Data.Configurations.SistemasFinanceiros.SistemaFinanceiro", "SistemaFinanceiro")
                        .WithMany()
                        .HasForeignKey("IdSistema")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SistemaFinanceiro");
                });

            modelBuilder.Entity("Financeiro.Data.Configurations.Despesas.Despesa", b =>
                {
                    b.HasOne("Financeiro.Data.Configurations.Categorias.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Financeiro.Data.Configurations.UsuariosSistemasFinanceiro.UsuarioSistemaFinanceiro", b =>
                {
                    b.HasOne("Financeiro.Data.Configurations.SistemasFinanceiros.SistemaFinanceiro", "SistemaFinanceiro")
                        .WithMany()
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SistemaFinanceiro");
                });
#pragma warning restore 612, 618
        }
    }
}
